* .emacs.d

#+BEGIN_SRC sh :results silent
cd && git clone git@github.com:torgeir/.emacs.d.git
#+END_SRC

Load this file when emacs starts.

#+BEGIN_SRC emacs-lisp :results silent
(find-file (locate-user-emacs-file "readme.org"))
#+END_SRC

* os setup
** shortcuts

#+BEGIN_SRC sh :results silent
ln -s ~/.emacs.d/emacsclient ~/bin/e
ln -s ~/.emacs.d/emacsclient-terminal ~/bin/em
#+END_SRC

** deps

#+BEGIN_SRC sh :results silent
npm install eslint babel-eslint jsonlint eslint-plugin-react typescript-language-server typescript jscodeshift browser-sync
#+END_SRC

** os x

#+BEGIN_SRC sh :results silent
brew tap d12frosted/emacs-plus
brew install emacs-plus --HEAD --with-natural-title-bar --without-spacemacs-icon
#+END_SRC

** ubuntu

#+BEGIN_SRC sh :results silent
sudo add-apt-repository -y ppa:ubuntu-elisp
sudo apt update
sudo apt install emacs-snapshot
sudo apt install fonts-inconsolata
sudo fc-cache -fv
#+END_SRC

* restore sanity

Remove the startup message.
 
#+BEGIN_SRC emacs-lisp :results silent
(setq inhibit-startup-message t)
#+END_SRC

Make shift work i org-mode.

#+BEGIN_SRC emacs-lisp :results silent
(setq org-support-shift-select t)
#+END_SRC

* bootstrap

Default to calling straigth-use-package when running use-package.

#+BEGIN_SRC emacs-lisp :results silent
;;; -*- lexical-binding: t; -*-
(setq straight-use-package-by-default t)
#+END_SRC

Bootstrap [straight.el](https://github.com/raxod502/straight.el).

#+BEGIN_SRC emacs-lisp :results silent
(defvar bootstrap-version)
(let ((bootstrap-file
       (expand-file-name "straight/repos/straight.el/bootstrap.el" user-emacs-directory))
      (bootstrap-version 5))
  (unless (file-exists-p bootstrap-file)
    (with-current-buffer
        (url-retrieve-synchronously
         "https://raw.githubusercontent.com/raxod502/straight.el/develop/install.el"
         'silent 'inhibit-cookies)
      (goto-char (point-max))
      (eval-print-last-sexp)))
  (load bootstrap-file nil 'nomessage))
#+END_SRC

Install [use-package](https://github.com/jwiegley/use-package).

#+BEGIN_SRC emacs-lisp :results silent
(straight-use-package 'use-package)
(eval-when-compile (require 'use-package))
#+END_SRC

* customization

#+BEGIN_SRC emacs-lisp :results silent
(setq custom-file (locate-user-emacs-file "custom.el"))
(load custom-file)
#+END_SRC

* themes

#+BEGIN_SRC emacs-lisp :results silent
(use-package doom-modeline
  :config
  (progn
    (setq doom-modeline-height 40
          doom-themes-padded-modeline 1)
    ;;(t/add-hook-setq 'js2-mode-hook doom-modeline-env-command "node -v 2>&1")
))

(use-package doom-themes
  :config
  (progn
    (setq doom-themes-enable-bold t
          doom-themes-enable-italic t)
    (doom-themes-visual-bell-config)
    ;;(t/add-hook 'org-mode-hook 'doom-themes-org-config)
    ;;(t/add-hook 'neotree-mode-hook 'doom-themes-neotree-config)
    (load-theme 'doom-one)
))
#+END_SRC
